{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/vigneshraja/Desktop/movie_app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/vigneshraja/Desktop/movie_app/src/MovieDetail.js\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  height: calc(100vh - 60px);\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  background: #fff;\\n  padding: 1rem 10%;\\n  display: flex;\\n  color: #282d35;\\n  > div {\\n    margin-left: 3rem;\\n    > h1 {\\n      position: absolute;\\n      top: 13rem;\\n      text-shadow: 0 0 2px #737272;\\n    }\\n    > h2, h3, h4 {\\n      margin: 0px;\\n    }\\n  }\\n\\n  img {\\n    position: relative;\\n    top: -9rem;\\n  }\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  padding-top: calc(40vh - 60px);\\n  background: url(\", \") no-repeat;\\n  backdrop-size: cover;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport Overdrive from \"react-overdrive\";\nimport { Poster } from \"./Movie\";\nimport backdrop from \"./backdrop.svg\"; // import Poster from './Movie';\n\nclass MovieDetail extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movie: {},\n      imageLoadError: true,\n      response: true,\n      error: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const res = await fetch(\"http://www.omdbapi.com/?i=\".concat(this.props.match.params.id, \"&apikey=fa281222\"));\n      const movie = await res.json();\n      this.setState({\n        movie: movie\n      });\n\n      if (movie.Response === \"False\") {\n        console.log(\"success\");\n        this.setState({\n          response: false,\n          error: movie.Error\n        });\n      }\n\n      console.log(movie);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    console.log(this.props);\n    console.log(this.state);\n    const _this$state = this.state,\n          movie = _this$state.movie,\n          imageLoadError = _this$state.imageLoadError,\n          response = _this$state.response,\n          error = _this$state.error;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, response ? React.createElement(MovieContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Movieinfo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, movie.Poster && movie.Poster !== \"N/A\" && imageLoadError ? React.createElement(Overdrive, {\n      id: movie.imdbID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Poster, {\n      src: movie.Poster,\n      alt: movie.Title,\n      onError: e => {\n        if (this.state.imageLoadError) {\n          this.setState({\n            imageLoadError: false\n          }); // e.target.src = 'fallbackImage.png';\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })) : React.createElement(Poster, {\n      src: require(\"./image-not-available.jpg\"),\n      alt: movie.Title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, movie.Title), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, movie.Year), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, movie.Genre), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"imdbID:\"), \" \", movie.imdbID), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Actor:\"), \" \", movie.Actors)))) : React.createElement(OopsContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: require(\"./oops.jpg\"),\n      alt: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, error)));\n  }\n\n}\n\nexport default MovieDetail;\nconst MovieContainer = styled.div(_templateObject(), backdrop);\nconst Movieinfo = styled.div(_templateObject2());\nconst OopsContainer = styled.div(_templateObject3());","map":{"version":3,"sources":["/home/vigneshraja/Desktop/movie_app/src/MovieDetail.js"],"names":["React","Component","styled","Overdrive","Poster","MovieDetail","state","movie","imageLoadError","response","error","componentDidMount","res","fetch","props","match","params","id","json","setState","Response","console","log","Error","e","render","imdbID","Title","require","Year","Genre","Actors","MovieContainer","div","backdrop","Movieinfo","OopsContainer"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport Overdrive from \"react-overdrive\";\nimport { Poster } from \"./Movie\";\nimport backdrop from \"./backdrop.svg\";\n\n// import Poster from './Movie';\n\nclass MovieDetail extends Component {\n  state = {\n    movie: {},\n    imageLoadError: true,\n    response: true,\n    error: \"\"\n  };\n\n  async componentDidMount() {\n    try {\n      const res = await fetch(\n        `http://www.omdbapi.com/?i=${\n          this.props.match.params.id\n        }&apikey=fa281222`\n      );\n      const movie = await res.json();\n      this.setState({\n        movie: movie\n      });\n      if (movie.Response === \"False\") {\n        console.log(\"success\");\n        this.setState({ response: false, error: movie.Error });\n      }\n      console.log(movie);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    console.log(this.props);\n    console.log(this.state);\n    const { movie, imageLoadError, response, error } = this.state;\n    return (\n      <div>\n        {response ? (\n          <MovieContainer>\n            <Movieinfo>\n              {movie.Poster && movie.Poster !== \"N/A\" && imageLoadError ? (\n                <Overdrive id={movie.imdbID}>\n                  <Poster\n                    src={movie.Poster}\n                    alt={movie.Title}\n                    onError={e => {\n                      if (this.state.imageLoadError) {\n                        this.setState({\n                          imageLoadError: false\n                        });\n                        // e.target.src = 'fallbackImage.png';\n                      }\n                    }}\n                  />\n                </Overdrive>\n              ) : (\n                <Poster\n                  src={require(\"./image-not-available.jpg\")}\n                  alt={movie.Title}\n                />\n              )}\n              <div>\n                <h1>{movie.Title}</h1>\n                <h2>{movie.Year}</h2>\n                <h3>{movie.Genre}</h3>\n                <p><b>imdbID:</b> {movie.imdbID}</p>\n                <p><b>Actor:</b> {movie.Actors}</p>                \n              </div>\n            </Movieinfo>\n          </MovieContainer>\n        ) : (\n          <OopsContainer>\n            <img src={require(\"./oops.jpg\")} alt=\"error\" />\n            <h2>{error}</h2>\n          </OopsContainer>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default MovieDetail;\n\nconst MovieContainer = styled.div`\n  position: relative;\n  padding-top: calc(40vh - 60px);\n  background: url(${backdrop}) no-repeat;\n  backdrop-size: cover;\n`;\n\nconst Movieinfo = styled.div`\n  background: #fff;\n  padding: 1rem 10%;\n  display: flex;\n  color: #282d35;\n  > div {\n    margin-left: 3rem;\n    > h1 {\n      position: absolute;\n      top: 13rem;\n      text-shadow: 0 0 2px #737272;\n    }\n    > h2, h3, h4 {\n      margin: 0px;\n    }\n  }\n\n  img {\n    position: relative;\n    top: -9rem;\n  }\n`;\n\nconst OopsContainer = styled.div`\n  display: flex;\n  height: calc(100vh - 60px);\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n"]},"metadata":{},"sourceType":"module"}